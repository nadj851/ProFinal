@model Enchere.Models.ObjetsViewModel
@using System.Globalization
@{
    ViewBag.Title = "Accueil";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@functions{
    public double getNiveauEnchere(int id)
    {
        if (Model.Enchere.Where(a => a.ObjetId == id).Any())
        {
            return Model.Enchere.Where(a => a.ObjetId == id).ToList().Max(m => m.enchereNiveau);
        }
        else
        {
            return 0;
        }
    }
    public int getNombreOffres(int id)
    {
        return Model.Enchere.Where(a => a.ObjetId == id).Count();
    }
}

@foreach (var item in Model.Categorie)
{
    <div class="panel panel-info">
        <div class="panel-heading"><h1>@Html.DisplayFor(modelItem => item.CategoryName)</h1></div>
        <div class="row panel-body ">
            <h4>@Html.DisplayFor(modelItem => item.CategoryDescription)</h4>
            @foreach (var subitem in item.objets)
            {

                <div class="col-md-3 img-thumbnail" style="margin-left:20px;margin-bottom:30px;min-height:380px;">
                    <p class="demo notranslate" style="font-size:16px; color:gray; 
                                                       font-family :Arial, Helvetica, sans-serif" 
                                                id="@subitem.Id">  </p>
                    <img src="~/Uploads/@subitem.objetImage" style="width:200px;height:200px;" />
                    <h3>@Html.DisplayFor(modelItem => subitem.objetNom)</h3>
                    @*<h5>@Html.Raw(HttpUtility.HtmlDecode(Html.DisplayFor(modelItem => subitem.objetDescription).ToString()))</h5>*@
                    @Html.ActionLink("Détail", "Details", new { objetId = subitem.Id }, new { @class = "badge" }) |
                    <span id="spanPrix" class="badge badge-warning">Prix actuel: @getNiveauEnchere(subitem.Id) $</span>
                    <span id="spanOffre" class="badge">@getNombreOffres(subitem.Id) Offres</span>
                    @*<span id="spanEtat" class="badge badge-info">@subitem.Statut</span>*@

                    <!-- Modal -->
                    <!-- Trigger the modal with a button -->

                    <a href="#" data-toggle="modal" data-target="#mod_@subitem.Id">
                        <span class="glyphicon glyphicon-question-sign"></span>
                    </a>
                    <div class="modal fade" id="mod_@subitem.Id" role="dialog">
                        <div class="modal-dialog modal-sm">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">@subitem.objetNom</h4>
                                </div>
                                <div class="modal-body">
                                    <p>l'objet à été mis le @subitem.objetDateInsc.Date.ToLongDateString() avec un prix de départ de @subitem.objetPrixDepart $ </p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>@*fin modal window*@


                </div>
            }
        </div>
    </div>
}

<script>
    var objets = [];
    var objetsId = [];
    var nbrOffres = [];

       @foreach (var item in Model.Categorie){

        foreach (var subitem in item.objets){

            long duree = subitem.objetDureeVente;
            DateTime dateLimite = subitem.objetDateInsc.AddDays(duree);
            
               //convertir la date du systeme au format demandé par la classe Date de javascript
                 @:objets.push("@dateLimite.ToString("MM dd yyyy HH:MM:ss")");
                 @:objetsId.push("@subitem.Id");
                 @:nbrOffres.push("@getNombreOffres(subitem.Id)");

                }
    }

    for (let i = 0; i <= objets.length; i++) {


        // Update the count down every 1 second
        var x = setInterval(function () {

            // Set the date we're counting down to

            var countDownDate = new Date(objets[i]).getTime();

            // Get todays date and time
            var now = new Date().getTime();

            // Find the distance between now an the count down date
            var distance = countDownDate - now;
            console.log(i + 1 + " nboffres " + nbrOffres[i] + ", time :" + objets[i] + ", distance :" + distance + ",  countdown :" + countDownDate);
            // Time calculations for days, hours, minutes and seconds
            var mois = Math.floor(distance / (1000 * 60 * 60*24*30));
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);
            //soustraire le nombre de jour du mois 
            //if (days > 30) days -= 30;
            // Display the result in the element with id="demo"
            if (document.getElementById(objetsId[i]) === null) return;
            document.getElementById(objetsId[i]).innerHTML ="Temps restant "+/* mois +"M "+*/days + "j " + hours + "h "
                + minutes + "m " + seconds + "s";

            // If the count down is finished, write some text
            if (distance < 0) {
                clearInterval(x);
                var message = "EXPIRÉ";
                if (parseInt(nbrOffres[i]) > 1) { message = "VENDU" }
                document.getElementById(objetsId[i]).innerHTML = message;
            }
        }, 1000);
    }
</script>
